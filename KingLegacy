

repeat wait() until game:IsLoaded()

if game.PlaceId == 6381829480 or game.PlaceId == 5931540094 or game.PlaceId == 4520749081 then
game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
if game.PlaceId == 5931540094 and not game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Stats") then
game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("ChooseMap")
end
if game.PlaceId == 6381829480 or game.PlaceId == 4520749081 then
game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("Stats")
game:GetService("Players").LocalPlayer:WaitForChild("PlayerStats")
end
local plr = game:GetService("Players").LocalPlayer
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local File =
pcall(
  function()
  AllIDs = game:GetService("HttpService"):JSONDecode(readfile("edthedt" .. game.Players.LocalPlayer.Name .. ".json"))
  end
)
if not File then
table.insert(AllIDs, actualHour)
writefile("edthedt" .. game.Players.LocalPlayer.Name .. ".json", game:GetService("HttpService"):JSONEncode(AllIDs))
end
function TPReturner()
local Site
if foundAnything == "" then
Site =
game.HttpService:JSONDecode(
  game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=100")
)
else
  Site =
game.HttpService:JSONDecode(
  game:HttpGet(
    "https://games.roblox.com/v1/games/" ..
    PlaceID .. "/servers/Public?sortOrder=Asc&limit=100&cursor=" .. foundAnything
  )
)
end
local ID = ""
if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
foundAnything = Site.nextPageCursor
end
local num = 0
for i, v in pairs(Site.data) do
local Possible = true
ID = tostring(v.id)
if tonumber(v.maxPlayers) > tonumber(v.playing) then
for _, Existing in pairs(AllIDs) do
if num ~= 0 then
if ID == tostring(Existing) then
Possible = false
end
else
  if tonumber(actualHour) ~= tonumber(Existing) then
local delFile =
pcall(
  function()
  delfile("edthedt" .. game.Players.LocalPlayer.Name .. ".json")
  AllIDs = {}
  table.insert(AllIDs, actualHour)
  end
)
end
end
num = num + 1
end
if Possible == true then
table.insert(AllIDs, ID)
wait()
pcall(
  function()
  writefile("edthedt" .. game.Players.LocalPlayer.Name .. ".json", game:GetService("HttpService"):JSONEncode(AllIDs))
  wait()
  game:GetService("TeleportService"):TeleportToPlaceInstance(
    PlaceID,
    ID,
    game.Players.LocalPlayer
  )
  end
)
wait(4)
end
end
end
end

if game.CoreGui:FindFirstChild("LagoGui") then
game.CoreGui:FindFirstChild("LagoGui"):Destroy()
end
local Flux = {
  RainbowColorValue = 0, HueSelectionPosition = 0
}
local PresetColor = Color3.fromRGB(66, 134, 255)
do
local ui = game.CoreGui:FindFirstChild("UlLib")
if ui then
ui:Destroy()
end
end

local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local function MakeDraggable(topbarobject, object)
local Dragging = nil
local DragInput = nil
local DragStart = nil
local StartPosition = nil

local function Update(input)
local Delta = input.Position - DragStart
local pos =
UDim2.new(
  StartPosition.X.Scale,
  StartPosition.X.Offset + Delta.X,
  StartPosition.Y.Scale,
  StartPosition.Y.Offset + Delta.Y
)
local Tween = TweenService:Create(object, TweenInfo.new(0.2), {
  Position = pos
})
Tween:Play()
end

topbarobject.InputBegan:Connect(
  function(input)
  if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
  Dragging = true
  DragStart = input.Position
  StartPosition = object.Position

  input.Changed:Connect(
    function()
    if input.UserInputState == Enum.UserInputState.End then
    Dragging = false
    end
    end
  )
  end
  end
)

topbarobject.InputChanged:Connect(
  function(input)
  if
    input.UserInputType == Enum.UserInputType.MouseMovement or
  input.UserInputType == Enum.UserInputType.Touch
  then
  DragInput = input
  end
  end
)

UserInputService.InputChanged:Connect(
  function(input)
  if input == DragInput and Dragging then
  Update(input)
  end
  end
)
end

local library = {}

function library:Window(text,keybind)
local bind = keybind or Enum.KeyCode.RightControl
local ff = false
local currenttab = ""

local DoctorShiba = Instance.new("ScreenGui")
DoctorShiba.Name = "UlLib"
DoctorShiba.Parent = game.CoreGui
DoctorShiba.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local Main = Instance.new("Frame")
Main.Name = "Main"
Main.Parent = DoctorShiba
Main.AnchorPoint = Vector2.new(0.5, 0.5)
Main.BackgroundColor3 = Color3.fromRGB(30, 28, 39)
Main.BackgroundTransparency = 0.100
Main.BorderSizePixel = 0
Main.ClipsDescendants = true
Main.Position = UDim2.new(0.499526083, 0, 0.499241292, 0)
Main.Size = UDim2.new(0, 600, 0, 350)

local Top = Instance.new("Frame")
Top.Name = "Top"
Top.Parent = Main
Top.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Top.BackgroundTransparency = 1.000
Top.BorderSizePixel = 0
Top.Size = UDim2.new(0, 600, 0, 20)

local Page = Instance.new("Frame")
Page.Name = "Page"
Page.Parent = Main
Page.BackgroundColor3 = Color3.fromRGB(25, 23, 35)
Page.BackgroundTransparency = 0.100
Page.BorderSizePixel = 0
Page.Size = UDim2.new(0, 125, 0, 350)

local NameHub = Instance.new("TextLabel")
NameHub.Name = "NameHub"
NameHub.Parent = Page
NameHub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
NameHub.BackgroundTransparency = 1.000
NameHub.Position = UDim2.new(0.113333493, 0, 0, 0)
NameHub.Size = UDim2.new(0, 110, 0, 20)
NameHub.Font = Enum.Font.GothamSemibold
NameHub.Text = text
NameHub.TextColor3 = Color3.fromRGB(225, 0, 0)
NameHub.TextSize = 11.000
NameHub.TextXAlignment = Enum.TextXAlignment.Left

local User = Instance.new("Frame")
User.Name = "User"
User.Parent = Page
User.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
User.BackgroundTransparency = 1.000
User.Position = UDim2.new(0, 0, 0.8, 30)
User.Size = UDim2.new(0, 125, 0, 40)

local UserText = Instance.new("TextLabel")
UserText.Name = "UserText"
UserText.Parent = User
UserText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
UserText.BackgroundTransparency = 1.000
UserText.Position = UDim2.new(0.354999989, 0, 0, 11)
UserText.Size = UDim2.new(0, 80, 0, 20)
UserText.Font = Enum.Font.Gotham
UserText.Text = tostring(game.Players.LocalPlayer.Name)
spawn(function()
  while wait() do
  pcall(function()
    wait(0.1)
    game:GetService('TweenService'):Create(
      UserText,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.InOut),
      {
        TextColor3 = Color3.fromRGB(255, 0, 0)}
    ):Play()
    wait(.5)
    game:GetService('TweenService'):Create(
      UserText,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.InOut),
      {
        TextColor3 = Color3.fromRGB(255, 155, 0)}
    ):Play()
    wait(.5)
    game:GetService('TweenService'):Create(
      UserText,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.InOut),
      {
        TextColor3 = Color3.fromRGB(255, 255, 0)}
    ):Play()
    wait(.5)
    game:GetService('TweenService'):Create(
      UserText,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.InOut),
      {
        TextColor3 = Color3.fromRGB(0, 255, 0)}
    ):Play()
    wait(.5)
    game:GetService('TweenService'):Create(
      UserText,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.InOut),
      {
        TextColor3 = Color3.fromRGB(0, 255, 255)}
    ):Play()
    wait(.5)
    game:GetService('TweenService'):Create(
      UserText,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.InOut),
      {
        TextColor3 = Color3.fromRGB(0, 155, 255)}
    ):Play()
    wait(.5)
    game:GetService('TweenService'):Create(
      UserText,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.InOut),
      {
        TextColor3 = Color3.fromRGB(255, 0, 255)}
    ):Play()
    wait(.5)
    game:GetService('TweenService'):Create(
      UserText,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.InOut),
      {
        TextColor3 = Color3.fromRGB(255, 0, 155)}
    ):Play()
    wait(.5)
    end)
  end
  end)
UserText.TextScaled = true
UserText.TextSize = 11.000
UserText.TextWrapped = true
UserText.TextXAlignment = Enum.TextXAlignment.Left

local UITextSizeConstraint = Instance.new("UITextSizeConstraint")
UITextSizeConstraint.Parent = UserText
UITextSizeConstraint.MaxTextSize = 11

local UserImage = Instance.new("ImageLabel")
UserImage.Name = "UserImage"
UserImage.Parent = User
UserImage.BackgroundColor3 = Color3.fromRGB(225, 225, 225)
UserImage.Position = UDim2.new(0, 10, 0, 9)
UserImage.Size = UDim2.new(0, 25, 0, 25)
UserImage.Image = "https://www.roblox.com/headshot-thumbnail/image?userId="..game.Players.LocalPlayer.UserId.."&width=420&height=420&format=png"

local UserImageCorner = Instance.new("UICorner")
UserImageCorner.CornerRadius = UDim.new(0, 100)
UserImageCorner.Name = "UserImageCorner"
UserImageCorner.Parent = UserImage

local ScrollPage = Instance.new("ScrollingFrame")
ScrollPage.Name = "ScrollPage"
ScrollPage.Parent = Page
ScrollPage.Active = true
ScrollPage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollPage.BackgroundTransparency = 1.000
ScrollPage.BorderSizePixel = 0
ScrollPage.Position = UDim2.new(0, 0, 0.086, 0)
ScrollPage.Size = UDim2.new(0, 125, 0, 290)
ScrollPage.CanvasSize = UDim2.new(0, 0, 0, 0)
ScrollPage.ScrollBarThickness = 0
local PageList = Instance.new("UIListLayout")
PageList.Name = "PageList"
PageList.Parent = ScrollPage
PageList.SortOrder = Enum.SortOrder.LayoutOrder
PageList.Padding = UDim.new(0, 7)

local PagePadding = Instance.new("UIPadding")
PagePadding.Name = "PagePadding"
PagePadding.Parent = ScrollPage
PagePadding.PaddingTop = UDim.new(0, 5)
PagePadding.PaddingLeft = UDim.new(0, 28)

local TabFolder = Instance.new("Folder")
TabFolder.Name = "TabFolder"
TabFolder.Parent = Main

MakeDraggable(Top,Main)

local uihide = false

UserInputService.InputBegan:Connect(function(input)
  if input.KeyCode == bind then
  if uihide == false then
  uihide = true
  Main:TweenSize(UDim2.new(0, 0, 0, 0),"In","Quad",0.2,true)
  else
    uihide = false
  Main:TweenSize(UDim2.new(0, 600, 0, 350),"Out","Quad",0.2,true)
  end
  end
  end)

local uitab = {}

function uitab:Tab(text,image)
local Image = image or 6023426915

local PageButton = Instance.new("TextButton")
PageButton.Name = "PageButton"
PageButton.Parent = ScrollPage
PageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PageButton.BackgroundTransparency = 1.000
PageButton.BorderSizePixel = 0
PageButton.Position = UDim2.new(0.224000007, 0, 0.029787235, 0)
PageButton.Size = UDim2.new(0, 97, 0, 20)
PageButton.AutoButtonColor = false
PageButton.Font = Enum.Font.GothamSemibold
PageButton.Text = text
PageButton.TextColor3 = Color3.fromRGB(225, 225, 225)
PageButton.TextSize = 11.000
PageButton.TextXAlignment = Enum.TextXAlignment.Left

local PageImage = Instance.new("ImageLabel")
PageImage.Name = "PageImage"
PageImage.Parent = PageButton
PageImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PageImage.BackgroundTransparency = 1.000
PageImage.Position = UDim2.new(0, -20, 0, 3)
PageImage.Size = UDim2.new(0, 15, 0, 15)
PageImage.Image = "rbxassetid://"..tostring(Image)

local MainTab = Instance.new("Frame")
MainTab.Name = "MainTab"
MainTab.Parent = TabFolder
MainTab.BackgroundColor3 = Color3.fromRGB(30, 28, 39)
MainTab.BorderSizePixel = 0
MainTab.Position = UDim2.new(0.208333328, 0, 0, 0)
MainTab.Size = UDim2.new(0, 475, 0, 350)
MainTab.Visible = false

local ScrollTab = Instance.new("ScrollingFrame")
ScrollTab.Name = "ScrollTab"
ScrollTab.Parent = MainTab
ScrollTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollTab.BackgroundTransparency = 1.000
ScrollTab.BorderSizePixel = 0
ScrollTab.Position = UDim2.new(0, 0, 0.057, 0)
ScrollTab.Size = UDim2.new(0, 475, 0, 330)
ScrollTab.CanvasSize = UDim2.new(0, 0, 0, 0)
ScrollTab.ScrollBarThickness = 3

local TabList = Instance.new("UIListLayout")
TabList.Name = "TabList"
TabList.Parent = ScrollTab
TabList.SortOrder = Enum.SortOrder.LayoutOrder
TabList.Padding = UDim.new(0, 5)

local TabPadding = Instance.new("UIPadding")
TabPadding.Name = "TabPadding"
TabPadding.Parent = ScrollTab
TabPadding.PaddingLeft = UDim.new(0, 10)
TabPadding.PaddingTop = UDim.new(0, 10)

PageButton.MouseButton1Click:Connect(function()
  currenttab = MainTab.Name
  for i,v in next, TabFolder:GetChildren() do
  if v.Name == "MainTab" then
  v.Visible = false
  end
  end
  MainTab.Visible = true

  for i,v in next, ScrollPage:GetChildren() do
  if v:IsA("TextButton") then
  TweenService:Create(
    v,
    TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
    {
      TextColor3 = Color3.fromRGB(225, 225, 225)}
  ):Play()
  end
  TweenService:Create(
    PageButton,
    TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
    {
      TextColor3 = Color3.fromRGB(255,0,0)}
  ):Play()
  end
  end)

if ff == false then
TweenService:Create(
  PageButton,
  TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
  {
    TextColor3 = Color3.fromRGB(255,0,0)}
):Play()
for i,v in next, TabFolder:GetChildren() do
if v.Name == "MainTab" then
v.Visible = false
end
MainTab.Visible = true
end
ff = true
end

game:GetService("RunService").Stepped:Connect(function()
  pcall(function()
    ScrollPage.CanvasSize = UDim2.new(0,0,0,PageList.AbsoluteContentSize.Y + 10)
    ScrollTab.CanvasSize = UDim2.new(0,0,0,TabList.AbsoluteContentSize.Y + 30)
    end)
  end)

local main = {}

function main:Button(text,callback)
local Button = Instance.new("TextButton")

Button.Name = "Button"
Button.Parent = ScrollTab
Button.BackgroundColor3 = Color3.fromRGB(50, 48, 59)
Button.BackgroundTransparency = 0.1
Button.BorderSizePixel = 0
Button.Size = UDim2.new(0, 455, 0, 30)
Button.AutoButtonColor = false
Button.Font = Enum.Font.Gotham
Button.Text = text
Button.TextColor3 = Color3.fromRGB(225, 225, 225)
Button.TextSize = 11.000
Button.TextWrapped = true

local ButtonCorner = Instance.new("UICorner")
ButtonCorner.Name = "ButtonCorner"
ButtonCorner.CornerRadius = UDim.new(0, 5)
ButtonCorner.Parent = Button

Button.MouseEnter:Connect(function()
  TweenService:Create(
    Button,
    TweenInfo.new(0.4,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
    {
      TextColor3 = Color3.fromRGB(255,0,0)}
  ):Play()
  end)

Button.MouseLeave:Connect(function()
  TweenService:Create(
    Button,
    TweenInfo.new(0.4,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
    {
      TextColor3 = Color3.fromRGB(225, 225, 225)}
  ):Play()
  end)

Button.MouseButton1Click:Connect(function()
  callback()
  Button.TextSize = 0
  TweenService:Create(
    Button,
    TweenInfo.new(0.4,Enum.EasingStyle.Back,Enum.EasingDirection.Out),
    {
      TextSize = 11
    }
  ):Play()
  end)
end

function main:Toggle(text,config,callback)
local ToggleImage = Instance.new("Frame")

local Toggle = Instance.new("TextButton")
Toggle.Name = "Toggle"
Toggle.Parent = ScrollTab
Toggle.BackgroundColor3 = Color3.fromRGB(50, 48, 59)
Toggle.BackgroundTransparency = 0.1
Toggle.BorderSizePixel = 0
Toggle.AutoButtonColor = false
Toggle.Size = UDim2.new(0, 455, 0, 30)
Toggle.Font = Enum.Font.SourceSans
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
Toggle.TextSize = 14.000

local ToggleCorner = Instance.new("UICorner")
ToggleCorner.Name = "ToggleCorner"
ToggleCorner.CornerRadius = UDim.new(0, 5)
ToggleCorner.Parent = Toggle

local ToggleLabel = Instance.new("TextLabel")
ToggleLabel.Name = "ToggleLabel"
ToggleLabel.Parent = Toggle
ToggleLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ToggleLabel.BackgroundTransparency = 1.000
ToggleLabel.Position = UDim2.new(0, 13, 0, 0)
ToggleLabel.Size = UDim2.new(0, 410, 0, 30)
ToggleLabel.Font = Enum.Font.Gotham
ToggleLabel.Text = text
ToggleLabel.TextColor3 = Color3.fromRGB(225, 225, 225)
ToggleLabel.TextSize = 11.000
ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left

ToggleImage.Name = "ToggleImage"
ToggleImage.Parent = Toggle
ToggleImage.BackgroundColor3 = Color3.fromRGB(70, 68, 79)
ToggleImage.Position = UDim2.new(0, 425, 0, 5)
ToggleImage.BorderSizePixel = 0
ToggleImage.Size = UDim2.new(0, 20, 0, 20)
local ToggleImageCorner = Instance.new("UICorner")
ToggleImageCorner.Name = "ToggleImageCorner"
ToggleImageCorner.CornerRadius = UDim.new(0, 5)
ToggleImageCorner.Parent = ToggleImage

local ToggleImage2 = Instance.new("Frame")
ToggleImage2.Name = "ToggleImage2"
ToggleImage2.Parent = ToggleImage
ToggleImage2.AnchorPoint = Vector2.new(0.5, 0.5)
ToggleImage2.BackgroundColor3 = Color3.fromRGB(255,0,0)
ToggleImage2.Position = UDim2.new(0, 10, 0, 10)
ToggleImage2.Visible = false

local ToggleImage2Corner = Instance.new("UICorner")
ToggleImage2Corner.Name = "ToggleImageCorner"
ToggleImage2Corner.CornerRadius = UDim.new(0, 5)
ToggleImage2Corner.Parent = ToggleImage2

Toggle.MouseEnter:Connect(function()
  TweenService:Create(
    ToggleLabel,
    TweenInfo.new(0.4,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
    {
      TextColor3 = Color3.fromRGB(255,0,0)}
  ):Play()
  end)

Toggle.MouseLeave:Connect(function()
  TweenService:Create(
    ToggleLabel,
    TweenInfo.new(0.4,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
    {
      TextColor3 = Color3.fromRGB(225, 225, 225)}
  ):Play()
  end)
if config == nil then config = false end
local toggled = config or false
Toggle.MouseButton1Click:Connect(function()
  if toggled == false then
  toggled = true
  ToggleImage2.Visible = true
  ToggleImage2:TweenSize(UDim2.new(0, 21, 0, 21),"In","Quad",0.1,true)
  else
    toggled = false
  ToggleImage2:TweenSize(UDim2.new(0, 0, 0, 0),"In","Quad",0.1,true)
  wait(0.1)
  ToggleImage2.Visible = false
  end
  callback(toggled)
  end)

if config == true then
ToggleImage2.Visible = true
ToggleImage2:TweenSize(UDim2.new(0, 21, 0, 21),"In","Quad",0.1,true)
toggled = true
callback(toggled)
end
end

function main:Textbox(text,holder,disappear,callback)
local Textboxx = Instance.new("Frame")
local TextboxxCorner = Instance.new("UICorner")
local TextboxTitle = Instance.new("TextLabel")
local Textbox = Instance.new("TextBox")
local TextboxCorner = Instance.new("UICorner")

Textboxx.Name = "Textboxx"
Textboxx.Parent = ScrollTab
Textboxx.BackgroundColor3 = Color3.fromRGB(50, 48, 59)
Textboxx.Size = UDim2.new(0, 455, 0, 30)

TextboxxCorner.CornerRadius = UDim.new(0, 5)
TextboxxCorner.Name = "TextboxxCorner"
TextboxxCorner.Parent = Textboxx

TextboxTitle.Name = "TextboxTitle"
TextboxTitle.Parent = Textboxx
TextboxTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextboxTitle.BackgroundTransparency = 1.000
TextboxTitle.Position = UDim2.new(0, 15, 0, 0)
TextboxTitle.Size = UDim2.new(0, 300, 0, 30)
TextboxTitle.Font = Enum.Font.Gotham
TextboxTitle.Text = text
TextboxTitle.TextColor3 = Color3.fromRGB(225, 225, 225)
TextboxTitle.TextSize = 11.000
TextboxTitle.TextXAlignment = Enum.TextXAlignment.Left

Textbox.Name = "Textbox"
Textbox.Parent = Textboxx
Textbox.BackgroundColor3 = Color3.fromRGB(30, 28, 39)
Textbox.Position = UDim2.new(0, 310, 0, 5)
Textbox.Size = UDim2.new(0, 140, 0, 20)
Textbox.Font = Enum.Font.Gotham
Textbox.Text = holder
Textbox.TextColor3 = Color3.fromRGB(225, 225, 225)
Textbox.TextSize = 11.000

Textbox.FocusLost:Connect(function()
  if #Textbox.Text > 0 then
  callback(Textbox.Text)
  end
  if disappear then
  Textbox.Text = ""
  else
    Textbox.Text = holder
  end
  end)

TextboxCorner.Name = "TextboxCorner"
TextboxCorner.CornerRadius = UDim.new(0, 5)
TextboxCorner.Parent = Textbox
end

function main:Dropdown(text,table,callback)
local Dropdown = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local DropButton = Instance.new("TextButton")
local Droptitle = Instance.new("TextLabel")
local DropScroll = Instance.new("ScrollingFrame")
local DropdownList = Instance.new("UIListLayout")
local DropdownPadding = Instance.new("UIPadding")
local DropImage = Instance.new("ImageLabel")

Dropdown.Name = "Dropdown"
Dropdown.Parent = ScrollTab
Dropdown.Active = true
Dropdown.BackgroundColor3 = Color3.fromRGB(50, 48, 59)
Dropdown.ClipsDescendants = true
Dropdown.Size = UDim2.new(0, 455, 0, 30)

UICorner.CornerRadius = UDim.new(0, 5)
UICorner.Parent = Dropdown

DropButton.Name = "DropButton"
DropButton.Parent = Dropdown
DropButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DropButton.BackgroundTransparency = 1.000
DropButton.Size = UDim2.new(0, 455, 0, 30)
DropButton.Font = Enum.Font.SourceSans
DropButton.Text = ""
DropButton.TextColor3 = Color3.fromRGB(0, 0, 0)
DropButton.TextSize = 14.000

Droptitle.Name = "Droptitle"
Droptitle.Parent = Dropdown
Droptitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Droptitle.BackgroundTransparency = 1.000
Droptitle.Position = UDim2.new(0.0281690136, 0, 0, 0)
Droptitle.Size = UDim2.new(0, 410, 0, 30)
Droptitle.Font = Enum.Font.Gotham
Droptitle.Text = text.." : "
Droptitle.TextColor3 = Color3.fromRGB(225, 225, 225)
Droptitle.TextSize = 11.000
Droptitle.TextXAlignment = Enum.TextXAlignment.Left

DropImage.Name = "DropImage"
DropImage.Parent = Dropdown
DropImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DropImage.BackgroundTransparency = 1.000
DropImage.Position = UDim2.new(0, 425, 0, 5)
DropImage.Rotation = 0
DropImage.Size = UDim2.new(0, 20, 0, 20)
DropImage.Image = "rbxassetid://5012539403"

DropScroll.Name = "DropScroll"
DropScroll.Parent = Droptitle
DropScroll.Active = true
DropScroll.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DropScroll.BackgroundTransparency = 1.000
DropScroll.BorderSizePixel = 0
DropScroll.Position = UDim2.new(-0.0317460336, 0, 1, 0)
DropScroll.Size = UDim2.new(0, 455, 0, 70)
DropScroll.CanvasSize = UDim2.new(0, 0, 0, 2)
DropScroll.ScrollBarThickness = 2

DropdownList.Name = "DropdownList"
DropdownList.Parent = DropScroll
DropdownList.SortOrder = Enum.SortOrder.LayoutOrder
DropdownList.Padding = UDim.new(0, 5)

DropdownPadding.Name = "DropdownPadding"
DropdownPadding.Parent = DropScroll
DropdownPadding.PaddingTop = UDim.new(0, 5)

local isdropping = false

for i,v in next,table do
local DropButton2 = Instance.new("TextButton")

DropButton2.Name = "DropButton2"
DropButton2.Parent = DropScroll
DropButton2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DropButton2.BackgroundTransparency = 1.000
DropButton2.Size = UDim2.new(0, 455, 0, 30)
DropButton2.AutoButtonColor = false
DropButton2.Font = Enum.Font.Gotham
DropButton2.TextColor3 = Color3.fromRGB(225, 225, 225)
DropButton2.TextSize = 11.000
DropButton2.Text = tostring(v)

DropButton2.MouseEnter:Connect(function()
  TweenService:Create(
    DropButton2,
    TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
    {
      TextColor3 = Color3.fromRGB(255,0,0)}
  ):Play()
  end)
DropButton2.MouseLeave:Connect(function()
  TweenService:Create(
    DropButton2,
    TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
    {
      TextColor3 = Color3.fromRGB(225, 225, 225)}
  ):Play()
  end)

DropButton2.MouseButton1Click:Connect(function()
  TweenService:Create(
    Dropdown,
    TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
    {
      Size = UDim2.new(0, 455, 0, 30)}
  ):Play()
  TweenService:Create(
    DropImage,
    TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
    {
      Rotation = 0
    }
  ):Play()
  Droptitle.Text = text.." : "..tostring(v)
  callback(v)
  isdropping = not isdropping
  DropScroll.CanvasSize = UDim2.new(0,0,0,DropdownList.AbsoluteContentSize.Y + 10)
  end)
end

DropButton.MouseButton1Click:Connect(function()
  if isdropping == false then
  isdropping = true
  TweenService:Create(
    Dropdown,
    TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
    {
      Size = UDim2.new(0, 455, 0, 100)}
  ):Play()
  TweenService:Create(
    DropImage,
    TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
    {
      Rotation = -180
    }
  ):Play()
  DropScroll.CanvasSize = UDim2.new(0,0,0,DropdownList.AbsoluteContentSize.Y + 10)
  else
    isdropping = false
  TweenService:Create(
    Dropdown,
    TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
    {
      Size = UDim2.new(0, 455, 0, 30)}
  ):Play()
  TweenService:Create(
    DropImage,
    TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
    {
      Rotation = 0
    }
  ):Play()
  DropScroll.CanvasSize = UDim2.new(0,0,0,DropdownList.AbsoluteContentSize.Y + 10)
  end
  end)
DropScroll.CanvasSize = UDim2.new(0,0,0,DropdownList.AbsoluteContentSize.Y + 10)

local drop = {}

function drop:Clear()
Droptitle.Text = tostring(text).." :"
TweenService:Create(
  Dropdown,
  TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
  {
    Size = UDim2.new(0, 455, 0, 30)}
):Play()
isdropping = false
for i, v in next, DropScroll:GetChildren() do
if v:IsA("TextButton") then
v:Destroy()
end
end
end
function drop:Add(t)
local DropButton2 = Instance.new("TextButton")

DropButton2.Name = "DropButton2"
DropButton2.Parent = DropScroll
DropButton2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DropButton2.BackgroundTransparency = 1.000
DropButton2.Size = UDim2.new(0, 455, 0, 30)
DropButton2.AutoButtonColor = false
DropButton2.Font = Enum.Font.Gotham
DropButton2.TextColor3 = Color3.fromRGB(225, 225, 225)
DropButton2.TextSize = 11.000
DropButton2.Text = tostring(t)

DropButton2.MouseButton1Click:Connect(function()
  TweenService:Create(
    Dropdown,
    TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
    {
      Size = UDim2.new(0, 455, 0, 30)}
  ):Play()
  TweenService:Create(
    DropImage,
    TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
    {
      Rotation = 0
    }
  ):Play()
  Droptitle.Text = text.." : "..tostring(t)
  callback(t)
  isdropping = not isdropping
  DropScroll.CanvasSize = UDim2.new(0,0,0,DropdownList.AbsoluteContentSize.Y + 10)
  end)
end
return drop
end

function main:Slider(text,min,max,set,callback)
set = (math.clamp(set,min,max))
if set > max then set = max end

local Slider = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local SliderTitle = Instance.new("TextLabel")
local SliderValue = Instance.new("TextLabel")
local SliderButton = Instance.new("TextButton")
local Bar1 = Instance.new("Frame")
local Bar = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local CircleBar = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local UICorner_4 = Instance.new("UICorner")

Slider.Name = "Slider"
Slider.Parent = ScrollTab
Slider.BackgroundColor3 = Color3.fromRGB(50, 48, 59)
Slider.Size = UDim2.new(0, 455, 0, 40)

UICorner.CornerRadius = UDim.new(0, 5)
UICorner.Parent = Slider

SliderTitle.Name = "SliderTitle"
SliderTitle.Parent = Slider
SliderTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SliderTitle.BackgroundTransparency = 1.000
SliderTitle.Position = UDim2.new(0.0283286124, 0, 0, 0)
SliderTitle.Size = UDim2.new(0, 290, 0, 20)
SliderTitle.Font = Enum.Font.Gotham
SliderTitle.Text = text
SliderTitle.TextColor3 = Color3.fromRGB(225, 225, 225)
SliderTitle.TextSize = 11.000
SliderTitle.TextXAlignment = Enum.TextXAlignment.Left

SliderValue.Name = "SliderValue"
SliderValue.Parent = Slider
SliderValue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SliderValue.BackgroundTransparency = 1.000
SliderValue.Position = UDim2.new(0.887778878, 0, 0, 0)
SliderValue.Size = UDim2.new(0, 40, 0, 20)
SliderValue.Font = Enum.Font.Gotham
SliderValue.Text = tostring(set and math.floor((set / max) * (max - min) + min) or 0)
SliderValue.TextColor3 = Color3.fromRGB(225, 225, 225)
SliderValue.TextSize = 11.000

SliderButton.Name = "SliderButton"
SliderButton.Parent = Slider
SliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SliderButton.BackgroundTransparency = 1.000
SliderButton.Position = UDim2.new(0, 10, 0, 25)
SliderButton.Size = UDim2.new(0, 435, 0, 5)
SliderButton.AutoButtonColor = false
SliderButton.Font = Enum.Font.SourceSans
SliderButton.Text = ""
SliderButton.TextColor3 = Color3.fromRGB(0, 0, 0)
SliderButton.TextSize = 14.000

Bar1.Name = "Bar1"
Bar1.Parent = SliderButton
Bar1.BackgroundColor3 = Color3.fromRGB(30, 28, 39)
Bar1.Size = UDim2.new(0, 435, 0, 5)

Bar.Name = "Bar"
Bar.Parent = Bar1
Bar.BackgroundColor3 = Color3.fromRGB(255,0,0)
Bar.Size = UDim2.new(set/max, 0, 0, 5)

UICorner_2.CornerRadius = UDim.new(0, 100)
UICorner_2.Parent = Bar

CircleBar.Name = "CircleBar"
CircleBar.Parent = Bar
CircleBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CircleBar.Position = UDim2.new(1, -2, 0, -2)
CircleBar.AnchorPoint = Vector2.new(0, 0.1)
CircleBar.Size = UDim2.new(0, 10, 0, 10)

UICorner_3.CornerRadius = UDim.new(0, 100)
UICorner_3.Parent = CircleBar

UICorner_4.CornerRadius = UDim.new(0, 100)
UICorner_4.Parent = Bar1

local mouse = game.Players.LocalPlayer:GetMouse()
local uis = game:GetService("UserInputService")

if Value == nil then
Value = set
pcall(function()
  callback(Value)
  end)
end

SliderButton.MouseButton1Down:Connect(function()
  Value = math.floor((((tonumber(max) - tonumber(min)) / 435) * Bar.AbsoluteSize.X) + tonumber(min)) or 0
  pcall(function()
    callback(Value)
    end)
  Bar.Size = UDim2.new(0, math.clamp(mouse.X - Bar.AbsolutePosition.X, 0, 435), 0, 5)
  CircleBar.Position = UDim2.new(0, math.clamp(mouse.X - Bar.AbsolutePosition.X - 2, 0, 425), 0, -2)
  moveconnection = mouse.Move:Connect(function()
    SliderValue.Text = Value
    Value = math.floor((((tonumber(max) - tonumber(min)) / 435) * Bar.AbsoluteSize.X) + tonumber(min))
    pcall(function()
      callback(Value)
      end)
    Bar.Size = UDim2.new(0, math.clamp(mouse.X - Bar.AbsolutePosition.X, 0, 435), 0, 5)
    CircleBar.Position = UDim2.new(0, math.clamp(mouse.X - Bar.AbsolutePosition.X - 2, 0, 425), 0, -2)
    end)
  releaseconnection = uis.InputEnded:Connect(function(Mouse)
    if Mouse.UserInputType == Enum.UserInputType.MouseButton1 then
    Value = math.floor((((tonumber(max) - tonumber(min)) / 435) * Bar.AbsoluteSize.X) + tonumber(min))
    pcall(function()
      callback(Value)
      end)
    Bar.Size = UDim2.new(0, math.clamp(mouse.X - Bar.AbsolutePosition.X, 0, 435), 0, 5)
    CircleBar.Position = UDim2.new(0, math.clamp(mouse.X - Bar.AbsolutePosition.X - 2, 0, 425), 0, -2)
    moveconnection:Disconnect()
    releaseconnection:Disconnect()
    end
    end)
  end)
releaseconnection = uis.InputEnded:Connect(function(Mouse)
  if Mouse.UserInputType == Enum.UserInputType.MouseButton1 then
  Value = math.floor((((tonumber(max) - tonumber(min)) / 435) * Bar.AbsoluteSize.X) + tonumber(min))
  SliderValue.Text = Value
  end
  end)
end
function main:Seperator(text)
local Seperator = Instance.new("Frame")
local Sep1 = Instance.new("Frame")
local SepLabel = Instance.new("TextLabel")
local Sep2 = Instance.new("Frame")

Seperator.Name = "Seperator"
Seperator.Parent = ScrollTab
Seperator.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Seperator.BackgroundTransparency = 1.000
Seperator.ClipsDescendants = true
Seperator.Size = UDim2.new(0, 455, 0, 20)

Sep1.Name = "Sep1"
Sep1.Parent = Seperator
Sep1.BackgroundColor3 = Color3.fromRGB(255,0,0)
Sep1.BorderSizePixel = 0
Sep1.Position = UDim2.new(0, 0, 0, 10)
Sep1.Size = UDim2.new(0, 150, 0, 1)

SepLabel.Name = "SepLabel"
SepLabel.Parent = Seperator
SepLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SepLabel.BackgroundTransparency = 1.000
SepLabel.Position = UDim2.new(0, 95, 0, 0)
SepLabel.Size = UDim2.new(0, 255, 0, 20)
SepLabel.Font = Enum.Font.Gotham
SepLabel.Text = text
SepLabel.TextColor3 = Color3.fromRGB(225,225,225)
SepLabel.TextSize = 11.000

Sep2.Name = "Sep2"
Sep2.Parent = Seperator
Sep2.BackgroundColor3 = Color3.fromRGB(255,0,0)
Sep2.BorderSizePixel = 0
Sep2.Position = UDim2.new(0, 305, 0, 10)
Sep2.Size = UDim2.new(0, 150, 0, 1)
end
function main:Line()
local Line = Instance.new("Frame")
local Linee = Instance.new("Frame")

Line.Name = "Line"
Line.Parent = ScrollTab
Line.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Line.BackgroundTransparency = 1.000
Line.ClipsDescendants = true
Line.Size = UDim2.new(0, 455, 0, 20)

Linee.Name = "Linee"
Linee.Parent = Line
Linee.BackgroundColor3 = Color3.fromRGB(255,0,0)
Linee.BorderSizePixel = 0
Linee.Position = UDim2.new(0, 0, 0, 10)
Linee.Size = UDim2.new(0, 455, 0, 1)
end
function main:Label(text)
local Label = Instance.new("TextLabel")
local PaddingLabel = Instance.new("UIPadding")
local labell = {}

Label.Name = "Label"
Label.Parent = ScrollTab
Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Label.BackgroundTransparency = 1.000
Label.Size = UDim2.new(0, 455, 0, 20)
Label.Font = Enum.Font.Gotham
Label.TextColor3 = Color3.fromRGB(225, 225, 225)
Label.TextSize = 11.000
Label.Text = text
Label.TextXAlignment = Enum.TextXAlignment.Left

PaddingLabel.PaddingLeft = UDim.new(0,10)
PaddingLabel.Parent = Label
PaddingLabel.Name = "PaddingLabel"

function labell:Set(newtext)
Label.Text = newtext
end

return labell
end

return main
end
return uitab
end

local SaveSettings = {
  ["Main"] = {
    ["Autofarm"] = false,
    ["Buso"] = false,
    ["Ken"] = false,
    ['SkillZ'] = true,
    ['SkillX'] = true,
    ['SkillC'] = true,
    ['SkillV'] = true,
    ['New World'] = false,
  },
  ["Main2"] = {
    ["WeaponSelect"] = 'Melee',
  },
  ["Raid"] = {
    ["Farm"] = false,
    ["difficulty"] = 'Easy',
    ['SkillZ'] = false,
    ['SkillX'] = false,
    ['SkillC'] = false,
    ['SkillV'] = false,
    ["Safe"] = false,
    ["Hp Set"] = 10,
  },
  ["SeaMonster"] = {
    ['Attack'] = false,
    ['CollectChest'] = false,
    ['SkillZ'] = false,
    ['SkillX'] = false,
    ['SkillC'] = false,
    ['SkillV'] = false,
    ["HopServer"] = false,
  },
  ["GhostShip"] = {
    ['Attack'] = false,
    ['CollectChest'] = false,
    ['SkillZ'] = false,
    ['SkillX'] = false,
    ['SkillC'] = false,
    ['SkillV'] = false,
    ["HopServer"] = false,
  },
  ["Stat"] = {
    ['PowerFruit'] = false,
    ["PowerFruitCap"] = 4250,
    ['Defense'] = false,
    ["DefenseCAP"] = 4250,
    ['Sword'] = false,
    ["SwordCAP"] = 4250,
    ['Melee'] = false,
    ["MeleeCAP"] = 4250,
  },
  ["Extra"] = {
    ["DeleteDamage"] = false,
    ["DeleteEffect"] = false,
    ["VisibleCombo"] = true,
    ["VisibleGeppo"] = true,
    ['Fruit Position'] = true,
    ['GrabAllFruit'] = false,
    ["DNOCD"] = false,
    ["GeppoInf"] = false,
    ["GeppoBypass"] = false,
  },
  ["DevilFruit"] = {
    ["Select"] = 'N/a',
    ['AutoBuy'] = false,
  },
  ["Setting"] = {
    ["FpsCap"] = 120,
    ["FpsLock"] = false,
    ["Distance"] = 8,
    ["Safe Farm"] = false,
  },
}
function Load()
if readfile and writefile and isfile and isfolder then
if isfolder("RenHub") == false then
makefolder("RenHub")
end
if isfile("/RenHub/KingLegacy-" .. game.Players.LocalPlayer.Name .. ".json") == false then
writefile("/RenHub/KingLegacy-" .. game.Players.LocalPlayer.Name .. ".json", game:GetService("HttpService"):JSONEncode(SaveSettings))
else
  local Decode = game:GetService("HttpService"):JSONDecode(readfile("/RenHub/KingLegacy-" .. game.Players.LocalPlayer.Name .. ".json"))
for i,v in pairs(Decode) do
SaveSettings[i] = v
end
end
else
  warn("Failed Load")
return false
end
end
function Save()
if readfile and writefile and isfile then
if isfile("/RenHub/KingLegacy-" .. game.Players.LocalPlayer.Name .. ".json") == false then
Load()
else
  local Decode = game:GetService("HttpService"):JSONDecode(readfile("/RenHub/KingLegacy-" .. game.Players.LocalPlayer.Name .. ".json"))
local Array = {}
for i,v in pairs(SaveSettings) do
Array[i] = v
end
writefile("/RenHub/KingLegacy-" .. game.Players.LocalPlayer.Name .. ".json", game:GetService("HttpService"):JSONEncode(Array))
end
else
  warn("Failed Save")
return false
end
end


Load()
Save()
local Mob = nil
local monname = nil
local plr = game.Players.LocalPlayer
local IslandTable = {}
local VirtualUser = game:GetService("VirtualUser")
local devilfruitx = require(game:GetService("ReplicatedStorage").Modules.DFROBUX)
local quest = require(game:GetService("ReplicatedStorage").Modules.QuestManager)
local Levelmon,RealUse,new_table,valuexxx = {}, {},nil,1
for i,v in pairs(quest) do
table.insert(Levelmon, tonumber(v['Mob']:match('%d+')))
end
for i,v in pairs(quest) do
table.insert(RealUse, tonumber(v['Mob']:match('%d+')))
end


local function sort(a, b)
if a < b then
return true
end
end
table.sort(Levelmon)
local function lvlx()
if plr.PlayerStats.lvl.Value >= 4250 then
new_table = 4250
elseif plr.PlayerStats.lvl.Value <= 9 then
new_table = 0
else
  if plr.PlayerStats.lvl.Value >= Levelmon[valuexxx] and plr.PlayerStats.lvl.Value < Levelmon[valuexxx + 1] then
new_table = Levelmon[valuexxx]
else
  valuexxx = valuexxx + 1
end
end
end
for i,v in pairs(game:GetService("Workspace").Areas:GetChildren()) do
if v.Name ~= "Sea of dust" then
table.insert(IslandTable,v.Name)
end
end
local function ReturnMonFolder()
if game:GetService("Workspace").Monster.Mon:FindFirstChild(quest[plr.CurrentQuest.Value].Mob) then
return 'Mon'
elseif game:GetService("Workspace").Monster.Boss:FindFirstChild(quest[plr.CurrentQuest.Value].Mob) then
return 'Boss'
end
end

local realta = {}
local Life = false
local devilfruit = require(game:GetService("ReplicatedStorage").Modules.DFROBUX)
for i,v in pairs(devilfruit) do
table.insert(realta,i)
end
local real = game.Players.LocalPlayer.UserId

function EquipWeapon(ToolSe)
if game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe) then
local tool = game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe)
game.Players.LocalPlayer.Character.Humanoid:EquipTool(tool)
end
end

function EquipMelee()
pcall(function()
  for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
  if v.ClassName == "Tool" and v.ToolTip == "Combat" then
  local ToolHumanoid = game.Players.LocalPlayer.Backpack:FindFirstChild(v.Name)
  game.Players.LocalPlayer.Character.Humanoid:EquipTool(ToolHumanoid)
  end
  end
  end)
end

function EquipSword()
pcall(function()
  for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
  if v.ClassName == "Tool" and v.ToolTip == "Sword" then
  local ToolHumanoid = game.Players.LocalPlayer.Backpack:FindFirstChild(v.Name)
  game.Players.LocalPlayer.Character.Humanoid:EquipTool(ToolHumanoid)
  end
  end
  end)
end

function EquipFruit()
pcall(function()
  for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
  if v.ClassName == "Tool" and v.ToolTip == "Fruit" then
  local ToolHumanoid = game.Players.LocalPlayer.Backpack:FindFirstChild(v.Name)
  game.Players.LocalPlayer.Character.Humanoid:EquipTool(ToolHumanoid)
  end
  end
  end)
end


local Main = library:Window("Bonk Hub : King Legacy", Enum.KeyCode.RightControl)
local AutoFarmTab = Main:Tab("Main", "http://www.roblox.com/asset/?id=6023426915")
local Main2 = Main:Tab("Main 2", "http://www.roblox.com/asset/?id=6023426915")
local StatTab = Main:Tab("Stat", "http://www.roblox.com/asset/?id=6023426915")
local TeleportTab = Main:Tab("Teleport", "http://www.roblox.com/asset/?id=6023426915")
local RaidTab = Main:Tab("Raid", "http://www.roblox.com/asset/?id=6023426915")
local SeaMonster = Main:Tab("Sea Monster", "http://www.roblox.com/asset/?id=6023426915")
local GhostShip = Main:Tab("Ghost Ship", "http://www.roblox.com/asset/?id=6023426915")
local DevilFruitTab = Main:Tab("DevilFruit", "http://www.roblox.com/asset/?id=6023426915")
local ExtraTab = Main:Tab("Extra", "http://www.roblox.com/asset/?id=6023426915")
local SettingTab = Main:Tab("Settings Tab", "http://www.roblox.com/asset/?id=6023426915")



AutoFarmTab:Toggle("Auto Farm",SaveSettings["Main"]["Autofarm"],function(boolean)
  SaveSettings["Main"]["Autofarm"] = boolean
  Save()
  end)
AutoFarmTab:Toggle("Auto New World",SaveSettings["Main"]["New World"],function(boolean)
  SaveSettings["Main"]["New World"] = boolean
  Save()
  end)

AutoFarmTab:Line()
AutoFarmTab:Label("Skill")
AutoFarmTab:Toggle("Skill Z",SaveSettings["Main"]["SkillZ"],function(boolean)
  SaveSettings["Main"]["SkillZ"] = boolean
  Save()
  end)
AutoFarmTab:Toggle("Skill X",SaveSettings["Main"]["SkillX"],function(boolean)
  SaveSettings["Main"]["SkillX"] = boolean
  Save()
  end)
AutoFarmTab:Toggle("Skill C",SaveSettings["Main"]["SkillC"],function(boolean)
  SaveSettings["Main"]["SkillC"] = boolean
  Save()
  end)
AutoFarmTab:Toggle("Skill V",SaveSettings["Main"]["SkillV"],function(boolean)
  SaveSettings["Main"]["SkillV"] = boolean
  Save()
  end)
AutoFarmTab:Line()
------- Main 2
Main2:Label("Weapon")

WeaponList = {
  "Melee",
  "Sword",
  "Fruit"
}



Main2:Dropdown("Weapon Select",WeaponList,function(boolean)
  SaveSettings["Main2"]["WeaponSelect"] = boolean
  Save()
  end)

Main2:Line()

Main2:Toggle("Safe Farm",SaveSettings["Setting"]['Safe Farm'],function(boolean)
  SaveSettings["Setting"]['Safe Farm'] = boolean
  Save()
  end)


Main2:Line()
Main2:Toggle("Buso Haki",SaveSettings["Main"]["Buso"],function(boolean)
  SaveSettings["Main"]["Buso"] = boolean
  Save()
  end)
Main2:Toggle("Ken Haki",SaveSettings["Main"]["Ken"],function(boolean)
  SaveSettings["Main"]["Ken"] = boolean
  Save()
  end)
Main2:Line()

------- GhostShip
GhostShip:Toggle("Attack GhostShip",SaveSettings["GhostShip"]["Attack"],function(boolean)
  SaveSettings["GhostShip"]["Attack"] = boolean
  Save()
  end)
GhostShip:Toggle("Collect Chest",SaveSettings["GhostShip"]["CollectChest"],function(boolean)
  SaveSettings["GhostShip"]["CollectChest"] = boolean
  Save()
  end)
GhostShip:Toggle("GhostShip Hop",SaveSettings["GhostShip"]["HopServer"],function(boolean)
  SaveSettings["GhostShip"]["HopServer"] = boolean
  Save()
  end)
GhostShip:Line()
GhostShip:Label("Skill")
GhostShip:Toggle("Skill Z",SaveSettings["GhostShip"]["SkillZ"],function(boolean)
  SaveSettings["GhostShip"]["SkillZ"] = boolean
  Save()
  end)
GhostShip:Toggle("Skill X",SaveSettings["GhostShip"]["SkillX"],function(boolean)
  SaveSettings["GhostShip"]["SkillX"] = boolean
  Save()
  end)
GhostShip:Toggle("Skill C",SaveSettings["GhostShip"]["SkillC"],function(boolean)
  SaveSettings["GhostShip"]["SkillC"] = boolean
  Save()
  end)
GhostShip:Toggle("Skill V",SaveSettings["GhostShip"]["SkillV"],function(boolean)
  SaveSettings["GhostShip"]["SkillV"] = boolean
  Save()
  end)
GhostShip:Line()
------ Sea King
SeaMonster:Toggle("Attack Seaking",SaveSettings["SeaMonster"]["Attack"],function(boolean)
  SaveSettings["SeaMonster"]["Attack"] = boolean
  Save()
  end)
SeaMonster:Toggle("Collect Chest",SaveSettings["SeaMonster"]["CollectChest"],function(boolean)
  SaveSettings["SeaMonster"]["CollectChest"] = boolean
  Save()
  end)
SeaMonster:Toggle("Sea Monster Hop",SaveSettings["SeaMonster"]["HopServer"],function(boolean)
  SaveSettings["SeaMonster"]["HopServer"] = boolean
  Save()
  end)
SeaMonster:Line()
SeaMonster:Label("Skill")
SeaMonster:Toggle("Skill Z",SaveSettings["SeaMonster"]["SkillZ"],function(boolean)
  SaveSettings["SeaMonster"]["SkillZ"] = boolean
  Save()
  end)
SeaMonster:Toggle("Skill X",SaveSettings["SeaMonster"]["SkillX"],function(boolean)
  SaveSettings["SeaMonster"]["SkillX"] = boolean
  Save()
  end)
SeaMonster:Toggle("Skill C",SaveSettings["SeaMonster"]["SkillC"],function(boolean)
  SaveSettings["SeaMonster"]["SkillC"] = boolean
  Save()
  end)
SeaMonster:Toggle("Skill V",SaveSettings["SeaMonster"]["SkillV"],function(boolean)
  SaveSettings["SeaMonster"]["SkillV"] = boolean
  Save()
  end)
SeaMonster:Line()


------- RaidTab
RaidTab:Dropdown("Difficulty", {
  "Normal","Easy"
},function(boolean)
  SaveSettings["Raid"]["difficulty"] = boolean
  Save()
  end)
RaidTab:Toggle("Auto Raid",SaveSettings["Raid"]["Farm"],function(boolean)
  SaveSettings["Raid"]["Farm"] = boolean
  Save()
  end)
RaidTab:Line()
RaidTab:Slider("Set Health %", 0, 100, SaveSettings["Raid"]["Hp Set"], function(bool)
  SaveSettings["Raid"]["Hp Set"] = bool
  Save()
  end)
RaidTab:Toggle("Safe Mode",SaveSettings["Raid"]["Safe"],function(boolean)
  SaveSettings["Raid"]["Safe"] = boolean
  Save()
  end)
RaidTab:Line()

RaidTab:Label("Skill")
RaidTab:Toggle("Skill Z",SaveSettings["Raid"]["SkillZ"],function(boolean)
  SaveSettings["Raid"]["SkillZ"] = boolean
  Save()
  end)
RaidTab:Toggle("Skill X",SaveSettings["Raid"]["SkillX"],function(boolean)
  SaveSettings["Raid"]["SkillX"] = boolean
  Save()
  end)
RaidTab:Toggle("Skill C",SaveSettings["Raid"]["SkillC"],function(boolean)
  SaveSettings["Raid"]["SkillC"] = boolean
  Save()
  end)
RaidTab:Toggle("Skill V",SaveSettings["Raid"]["SkillV"],function(boolean)
  SaveSettings["Raid"]["SkillV"] = boolean
  Save()
  end)
RaidTab:Line()
------- Teleport
local TeleportX = "None"
local newdfsa = TeleportTab:Dropdown("Island Select",IslandTable, function(bool)
  TeleportX = bool
  end)
TeleportTab:Button("Teleport To Island",function ()
  for i, v in pairs(game:GetService("Workspace").Areas:GetChildren()) do
  if v.Name == TeleportX then
  plr.Character.HumanoidRootPart.CFrame = v.CFrame * CFrame.new(0,300,0)
  end
  end
  end)



-------- DevilFruit
local Devil = DevilFruitTab:Label("DevilFruit : N/a | Piece : N/a | Gem : N/a")
DevilFruitTab:Toggle("DevilFruit Snipe",SaveSettings["DevilFruit"]["AutoBuy"],function(boolean)
  SaveSettings["DevilFruit"]["AutoBuy"] = boolean
  Save()
  end)
DevilFruitTab:Dropdown("Devil Fruit Select",realta,SaveSettings["DevilFruit"]["Select"],function(boolean)
  SaveSettings["DevilFruit"]["Select"] = boolean
  Save()
  Devil:Refresh("DevilFruit : " ..SaveSettings["DevilFruit"]["Select"].. " | Beli : ".. devilfruit[SaveSettings["DevilFruit"]["Select"]].beli .. " | Gem : " .. devilfruit[SaveSettings["DevilFruit"]["Select"]].gem)
  end)
if SaveSettings["DevilFruit"]["Select"] == 'N/a' then

else
  Devil:Refresh("DevilFruit : " ..SaveSettings["DevilFruit"]["Select"].. " | Beli : ".. devilfruit[SaveSettings["DevilFruit"]["Select"]].beli .. " | Gem : " .. devilfruit[SaveSettings["DevilFruit"]["Select"]].gem)
end

spawn(function ()
  while true do
  if SaveSettings["DevilFruit"]["AutoBuy"] then
  pcall(function ()
    if plr.PlayerStats.DFName.Value == SaveSettings["DevilFruit"]["Select"] then
    else
      game:GeService("ReplicatedStorage").Remotes.Functions.dfbeli:InvokeServer(SaveSettings["DevilFruit"]["Select"],true)
    end
    end)
  end
  wait()
  end
  end)
-------- StatTab
StatTab:Toggle("PowerFruit",SaveSettings["Stat"]["PowerFruit"],function(boolean)
  SaveSettings["Stat"]["PowerFruit"] = boolean
  Save()
  end)
StatTab:Slider("PowerFruit Cap", 0, 4250, SaveSettings["Stat"]["PowerFruitCap"], function(bool)
  SaveSettings["Stat"]["PowerFruitCap"] = bool
  Save()
  end)
StatTab:Line()
StatTab:Toggle("Defense",SaveSettings["Stat"]["Defense"],function(boolean)
  SaveSettings["Stat"]["Defense"] = boolean
  Save()
  end)
StatTab:Slider("Defense Cap", 0, 4250, SaveSettings["Stat"]["DefenseCAP"], function(bool)
  SaveSettings["Stat"]["DefenseCAP"] = bool
  Save()
  end)
StatTab:Line()
StatTab:Toggle("Sword",SaveSettings["Stat"]["Sword"],function(boolean)
  SaveSettings["Stat"]["Sword"] = boolean
  Save()
  end)
StatTab:Slider("Sword Cap", 0, 4250, SaveSettings["Stat"]["SwordCAP"], function(bool)
  SaveSettings["Stat"]["SwordCAP"] = bool
  Save()
  end)
StatTab:Line()
StatTab:Toggle("Melee",SaveSettings["Stat"]["Melee"],function(boolean)
  SaveSettings["Stat"]["Melee"] = boolean
  Save()
  end)
StatTab:Slider("Melee Cap", 0, 4250, SaveSettings["Stat"]["MeleeCAP"], function(bool)
  SaveSettings["Stat"]["MeleeCAP"] = bool
  Save()
  end)

StatTab:Line()

-------- ExtraTab



ExtraTab:Toggle("Delete Damage",SaveSettings["Extra"]["DeleteDamage"],function(boolean)
  SaveSettings["Extra"]["DeleteDamage"] = boolean
  Save()
  end)

ExtraTab:Toggle("Delete Effect",SaveSettings["Extra"]["DeleteEffect"],function(boolean)
  SaveSettings["Extra"]["DeleteEffect"] = boolean
  Save()
  end)

ExtraTab:Toggle("Visible Combo Gui",SaveSettings["Extra"]["VisibleCombo"],function(boolean)
  SaveSettings["Extra"]["VisibleCombo"] = boolean
  Save()
  end)
ExtraTab:Toggle("Visible Geppo Gui",SaveSettings["Extra"]["VisibleGeppo"],function(boolean)
  SaveSettings["Extra"]["VisibleGeppo"] = boolean
  Save()
  end)

ExtraTab:Toggle("Unlock GamePass Fruit Position",SaveSettings["Extra"]["Fruit Position"],function(boolean)
  SaveSettings["Extra"]["Fruit Position"] = boolean
  Save()
  end)
ExtraTab:Toggle("Grab All Fruit",SaveSettings["Extra"]['GrabAllFruit'] ,function(boolean)
  SaveSettings["Extra"]['GrabAllFruit'] = boolean
  Save()
  end)

ExtraTab:Toggle("Dash No Cooldown",SaveSettings["Extra"]['DNOCD'] ,function(boolean)
  SaveSettings["Extra"]['DNOCD'] = boolean
  Save()
  end)

ExtraTab:Toggle("Geppo Inf",SaveSettings["Extra"]['GeppoInf'] ,function(boolean)
  SaveSettings["Extra"]['GeppoInf'] = boolean
  Save()
  end)
ExtraTab:Toggle("Geppo Bypass",SaveSettings["Extra"]['GeppoBypass'] ,function(boolean)
  SaveSettings["Extra"]['GeppoBypass'] = boolean
  Save()
  end)

SettingTab:Slider("Distance Settings",0,20,SaveSettings["Setting"]['Distance'],function (value)
  SaveSettings["Setting"]['Distance'] = value
  Save()
  end)
SettingTab:Button("Rejoin Server",function()
  local ts = game:GetService("TeleportService") local p = game.Players.LocalPlayer ts:Teleport(game.PlaceId, p)
  end)
SettingTab:Button("Server Hop",function()
  TPReturner()
  end)
SettingTab:Toggle("Lock Fps",SaveSettings["Setting"]["FpsLock"], function(bool)
  SaveSettings["Setting"]["FpsLock"] = bool
  Save()
  if SaveSettings["Setting"]["FpsLock"] then
  pcall(setfpscap, SaveSettings["Setting"]["FpsCap"])
  pcall(set_fps_cap, SaveSettings["Setting"]["FpsCap"])
  else
    pcall(setfpscap,240)
  pcall(set_fps_cap,240)
  end
  end)
SettingTab:Slider("Fps Change", 15, 240, SaveSettings["Setting"]["FpsCap"], function(bool)
  SaveSettings["Setting"]["FpsCap"] = bool
  Save()
  if SaveSettings["Setting"]["FpsLock"] then
  pcall(setfpscap, SaveSettings["Setting"]["FpsCap"])
  pcall(set_fps_cap, SaveSettings["Setting"]["FpsCap"])
  end
  end)

local time = SettingTab:Label("Server Time : N/a")
local function Munrock()
lvlx()
if game:GetService("Workspace").AllNPC:FindFirstChild('QuestLvl' .. tostring(new_table))then
plr.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").AllNPC:FindFirstChild('QuestLvl' .. tostring(new_table)).HumanoidRootPart.CFrame * CFrame.new(0,-6.5,0)
elseif game:GetService("ReplicatedStorage").MAP:FindFirstChild('QuestLvl' .. tostring(new_table)) then
plr.Character.HumanoidRootPart.CFrame = game:GetService("ReplicatedStorage").MAP:FindFirstChild('QuestLvl' .. tostring(new_table)).HumanoidRootPart.CFrame * CFrame.new(0,-6.5,0)
else
  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,5000,0)
end
wait(.1)
game:GetService("ReplicatedStorage").Remotes.Functions.CheckQuest:InvokeServer(workspace.AllNPC:FindFirstChild(('QuestLvl' .. tostring(new_table))))
end
local function click()
VirtualUser:CaptureController()
VirtualUser:ClickButton1(Vector2.new(50, 50), CFrame.new(Vector3.new(0, 0, 0)))
end
local function Click()
wait(.5)
local VirtualInputManager = game:GetService("VirtualInputManager")
VirtualInputManager:SendMouseButtonEvent(20, 979, 0, true, game, 1)
VirtualInputManager:SendMouseButtonEvent(20, 979, 0, false, game, 1)
end
local function UpdateTime()
GameTime = math.floor(workspace.DistributedGameTime+0.5)
Hour = math.floor(GameTime/(60^2))%24
Minute = math.floor(GameTime/(60^1))%60
Second = math.floor(GameTime/(60^0))%60
time:Refresh("|  Hour : " .. Hour.." | Minute : "..Minute.." | Second : "..Second .."  |")
end
local function skilluse(valuexxx)
game:GetService("VirtualInputManager"):SendKeyEvent(true,valuexxx,false,plr.Character.HumanoidRootPart)
wait()
game:GetService("VirtualInputManager"):SendKeyEvent(false,valuexxx,false,plr.Character.HumanoidRootPart)
end


local function LegacyIsland()
if game:GetService("Workspace").Island:FindFirstChild("Legacy Island1") then
return {
  true,"1"
} elseif game:GetService("Workspace").Island:FindFirstChild("Legacy Island2") then
return {
  true,"2"
} elseif game:GetService("Workspace").Island:FindFirstChild("Legacy Island3") then
return {
  true,"3"
} elseif game:GetService("Workspace").Island:FindFirstChild("Legacy Island4") then
return {
  true,"4"
} elseif game:GetService("Workspace").Island:FindFirstChild("Legacy Island5") then
return {
  true,"5"
} else
  return {
  false,"nil"
}
end
end


spawn(function()
  while true do
  if SaveSettings["SeaMonster"]["Attack"] then
  if LegacyIsland()[1] == true then
  pcall(function()
    if game:GetService("Workspace").SeaMonster:FindFirstChild("SeaKing") then
    spawn(function ()
      if SaveSettings["SeaMonster"]["SkillZ"] then
      skilluse("Z")
      end
      if SaveSettings["SeaMonster"]["SkillX"] then
      skilluse("X")
      end
      if SaveSettings["SeaMonster"]["SkillC"] then
      skilluse("C")
      end
      if SaveSettings["SeaMonster"]["SkillV"] then
      skilluse("V")
      end
      end)
    spawn(function ()
      click()
      end)
    spawn(function()
      plr.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").SeaMonster:FindFirstChild("SeaKing") .HumanoidRootPart.CFrame * CFrame.new(0,-5,0)
      end)
    else
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Island["Legacy Island" .. LegacyIsland()[2]].ChestSpawner.CFrame
    end
    end)
  else
    if SaveSettings["SeaMonster"]["HopServer"] then
  TPReturner()
  end
  end
  end
  wait()
  end
  end)
spawn(function()
  while true do
  if SaveSettings["SeaMonster"]["CollectChest"] then
  if LegacyIsland()[1] == true then
  pcall(function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Island["Legacy Island" .. LegacyIsland()[2]].ChestSpawner.CFrame
    end)
  end
  end
  wait(1)
  end
  end)

spawn(function ()
  while true do
  if SaveSettings["Stat"]["PowerFruit"] then
  pcall(function()
    if tonumber(plr.PlayerStats.DF.Value) <= math.floor(SaveSettings["Stat"]["PowerFruitCap"]) then
    plr.PlayerGui.Stats.Button.StatsFrame.RemoteEvent:FireServer("Devil Fruit",1)
    end
    end)
  end
  if SaveSettings["Stat"]["Defense"] then
  pcall(function()
    if tonumber(plr.PlayerStats.Defense.Value) <= math.floor(SaveSettings["Stat"]["DefenseCAP"]) then
    plr.PlayerGui.Stats.Button.StatsFrame.RemoteEvent:FireServer("Defense",1)
    end
    end)
  end
  if SaveSettings["Stat"]["Sword"] then
  pcall(function()
    if tonumber(plr.PlayerStats.sword.Value) <= math.floor(SaveSettings["Stat"]["SwordCAP"]) then
    plr.PlayerGui.Stats.Button.StatsFrame.RemoteEvent:FireServer("Sword",1)
    end
    end)
  end
  if SaveSettings["Stat"]["Melee"] then
  pcall(function()
    if tonumber(plr.PlayerStats.Melee.Value) <= math.floor(SaveSettings["Stat"]["MeleeCAP"]) then
    plr.PlayerGui.Stats.Button.StatsFrame.RemoteEvent:FireServer("Melee",1)
    end
    end)
  end
  wait()
  end
  end)
spawn(function ()
  while true do
  if SaveSettings["Main"]["New World"] then
  if plr.PlayerStats.lvl.Value >= 2350 and game.PlaceId == 4520749081 then
  local ts = game:GetService("TeleportService") local p = game.Players.LocalPlayer ts:Teleport(6381829480, p)
  end
  end
  wait()
  end
  end)



coroutine.wrap(function()
  while true do
  pcall(function ()
    if SaveSettings["Main"]["Buso"] then
    if plr.Character.Haki.Value == 0 then
    if plr.Character:FindFirstChild("Haki") then
    plr.Character.Services.Client.Armament:FireServer()
    end
    end
    end
    end)
  wait(3)
  end
  end)()
spawn(function ()
  while true do
  pcall(function ()
    UpdateTime()
    end)

  wait()
  end
  end)


spawn(function()
  while true do
  if SaveSettings["Main"]["EquipItem"] and Life == true then
  pcall(function()
    game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[SaveSettings["Main"]["WeaponSelect"]])
    end)
  end

  wait(1)
  end
  end)
spawn(function()
  while true do
  if SaveSettings["Raid"]["EquipItem"] and Life == true then
  pcall(function()
    game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[SaveSettings["Raid"]["WeaponSelect"]])
    end)
  end

  wait(1)
  end
  end)
spawn(function()
  while true do
  if SaveSettings["Main"]["Ken"] then
  pcall(function()
    plr.Character.Services.Client.KenEvent:InvokeServer()
    end)
  end

  wait(1)
  end
  end)

spawn(function ()
  while true do
  pcall(function ()
    if game:GetService("Workspace"):FindFirstChild(plr.Name).Humanoid.Health > 0 then
    Life = true
    else
      Life = false
    end
    end)
  wait()
  end
  end)
spawn(function ()
  while true do
  if SaveSettings["Extra"]['GeppoInf'] and Life == true then
  pcall(function ()
    plr.Backpack.GeppoNew.cds.Value = 999
    end)
  end
  wait()
  end
  end)
spawn(function()
  while true do
  if SaveSettings["GhostShip"]["CollectChest"] then
  if game:GetService("Workspace"):FindFirstChild("Chest1") then
  pcall(function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace"):FindFirstChild("Chest1").RootPart.CFrame
    end)
  end
  if game:GetService("Workspace"):FindFirstChild("Chest2") then
  pcall(function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace"):FindFirstChild("Chest2").RootPart.CFrame
    end)
  end
  if game:GetService("Workspace"):FindFirstChild("Chest3") then
  pcall(function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace"):FindFirstChild("Chest3").RootPart.CFrame
    end)
  end
  if game:GetService("Workspace"):FindFirstChild("Chest4") then
  pcall(function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace"):FindFirstChild("Chest4").RootPart.CFrame
    end)
  end
  if game:GetService("Workspace"):FindFirstChild("Chest5") then
  pcall(function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace"):FindFirstChild("Chest5").RootPart.CFrame
    end)
  end
  if game:GetService("Workspace"):FindFirstChild("Chest6") then
  pcall(function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace"):FindFirstChild("Chest1").RootPart.CFrame
    end)
  end
  if game:GetService("Workspace"):FindFirstChild("Chest7") then
  pcall(function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace"):FindFirstChild("Chest2").RootPart.CFrame
    end)
  end
  end
  wait()
  end
  end)
spawn(function()
  while wait() do
  if SaveSettings["GhostShip"]["Attack"] then
  if game:GetService("Workspace").GhostMonster:FindFirstChild("Ghost Ship") then
  pcall(function ()
    spawn(function ()
      if SaveSettings["GhostShip"]["SkillZ"] then
      skilluse("Z")
      end
      if SaveSettings["GhostShip"]["SkillX"] then
      skilluse("X")
      end
      if SaveSettings["GhostShip"]["SkillC"] then
      skilluse("C")
      end
      if SaveSettings["GhostShip"]["SkillV"] then
      skilluse("V")
      end
      end)
    spawn(function ()
      click()
      end)
    spawn(function()
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").GhostMonster["Ghost Ship"].HumanoidRootPart.CFrame
      end)
    end)
  else
    if SaveSettings["GhostShip"]["HopServer"] then
  if not game:GetService("Workspace"):FindFirstChild("Chest1") then
  TPReturner()
  end
  end
  end
  end
  end
  end)
spawn(function ()
  while true do
  if SaveSettings["Extra"]['GeppoBypass'] and Life == true then
  pcall(function ()
    for i, v in next, getgc() do
    if typeof(v) == "function" and getfenv(v).script == plr.Backpack.GeppoNew then
    for i2, v2 in next, getupvalues(v) do
    if i2 == 7 then
    repeat wait()
    setupvalue(v, i2, 0)
    until SaveSettings["Extra"]['GeppoBypass'] == false or not Life
    end
    end
    end
    end
    end)
  end
  wait()
  end
  end)
spawn(function ()
  while true do
  if SaveSettings["Extra"]['DNOCD'] and Life == true then
  pcall(function ()
    for i, v in next, getgc() do
    if typeof(v) == "function" and getfenv(v).script == plr.Backpack.Dash then
    for i2, v2 in next, getupvalues(v) do
    if typeof(v2) == 'boolean' then
    repeat wait()
    setupvalue(v, i2, true)
    until SaveSettings["Extra"]['DNOCD'] == false or not Life
    end
    end
    end
    end
    end)
  end
  wait()
  end
  end)
spawn(function ()
  while true do
  if SaveSettings["Raid"]["Farm"] then
  pcall(function ()
    if game.PlaceId == 6381829480 or game.PlaceId == 4520749081 then
    VirtualUser:CaptureController()
    VirtualUser:SetKeyDown("w",key)
    wait()
    VirtualUser:CaptureController()
    VirtualUser:SetKeyUp("w",key)
    plr.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").CircleBeam.CFrame * CFrame.new(0,-25,0)
    end
    end)
  end
  wait()
  end
  end)
spawn(function ()
  while true do
  if SaveSettings["Raid"]["Farm"] then
  pcall(function ()
    if game.PlaceId == 5931540094 then
    game:GetService("ReplicatedStorage").ChooseMapRemote:FireServer(SaveSettings["Raid"]["difficulty"])
    game:GetService("ReplicatedStorage").GoldenArenaEvents.StartEvent:FireServer()
    end
    end)
  end
  wait()
  end
  end)
local AttackOn = true
spawn(function ()
  while true do
  if SaveSettings["Raid"]["Farm"] and game.PlaceId == 5931540094 and AttackOn and Life then
  pcall(function()
    for i,v in pairs(game:GetService("Workspace").MOB:GetChildren()) do
    if v:FindFirstChild("HumanoidRootPart") then
    Mob = v
    repeat wait()
    spawn(function ()
      plr.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,0,SaveSettings["Setting"]['Distance'])
      end)
    spawn(function ()
      if SaveSettings["Raid"]["SkillZ"] then
      skilluse("Z")
      end
      if SaveSettings["Raid"]["SkillX"] then
      skilluse("X")
      end
      if SaveSettings["Raid"]["SkillC"] then
      skilluse("C")
      end
      if SaveSettings["Raid"]["SkillV"] then
      skilluse("V")
      end
      end)
    spawn(function ()
      click()
      end)
    until v.Humanoid.Health <= 0 or SaveSettings["Raid"]["Farm"] == false or not AttackOn
    return
    end
    end
    end)
  end
  wait()
  end
  end)
spawn(function()
  while true do
  if SaveSettings["Raid"]["Safe"] and Life then
  pcall(function ()
    if plr.Character.Humanoid.Health >= plr.Character.Humanoid.MaxHealth / 100 * SaveSettings["Raid"]["Hp Set"] then
    AttackOn = true
    else
      repeat
    AttackOn = false
    for i,v in pairs(game:GetService("Workspace").MOB:GetChildren()) do
    if v:FindFirstChild("HumanoidRootPart") then
    repeat wait()
    spawn(function ()
      plr.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,100,50)
      end)
    until plr.Character.Humanoid.Health >= plr.Character.Humanoid.MaxHealth or v.Humanoid.Health <= 0 or SaveSettings["Raid"]["Farm"] == false
    return
    end
    end
    wait()
    until plr.Character.Humanoid.Health >= plr.Character.Humanoid.MaxHealth or not SaveSettings["Raid"]["Safe"]
    end
    end)
  end
  wait()
  end
  end)
spawn(function ()
  while true do
  if SaveSettings["Extra"]["DeleteDamage"] then
  pcall(function ()
    if game:GetService("Workspace"):FindFirstChild('DamageShow') then
    game:GetService("Workspace"):FindFirstChild('DamageShow').Parent = game:GetService("Workspace").Camera
    end
    end)
  else
    pcall(function ()
    if game:GetService("Workspace").Camera:FindFirstChild('DamageShow') then
    game:GetService("Workspace").Camera:FindFirstChild('DamageShow').Parent = game:GetService("Workspace")
    end
    end)
  end
  if SaveSettings["Extra"]["DeleteEffect"] then
  pcall(function ()
    if game:GetService("Workspace"):FindFirstChild('Effects') then
    game:GetService("Workspace"):FindFirstChild('Effects').Parent = game:GetService("Workspace").Camera
    end
    end)
  else
    pcall(function ()
    if game:GetService("Workspace").Camera:FindFirstChild('Effects') then
    game:GetService("Workspace").Camera:FindFirstChild('Effects').Parent = game:GetService("Workspace")
    end
    end)
  end
  if SaveSettings["Extra"]["VisibleCombo"] then
  pcall(function ()

    end)
  else
    pcall(function ()
    plr.PlayerGui.Combo.Enabled = SaveSettings["Extra"]["VisibleCombo"]
    end)
  end
  if SaveSettings["Extra"]["Fruit Position"] then
  game.Players.LocalPlayer.UserId = 991117111
  else
    game.Players.LocalPlayer.UserId = real
  end
  if SaveSettings["Extra"]['GrabAllFruit'] then
  if game:GetService("Workspace"):FindFirstChildWhichIsA("Tool") then
  for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
  if v:IsA("Tool") then
  firetouchinterest(v.Handle, game.Players.LocalPlayer.Character.HumanoidRootPart,0)
  firetouchinterest(v.Handle, game.Players.LocalPlayer.Character.HumanoidRootPart,1)
  end
  end
  end
  end
  if SaveSettings["Extra"]["VisibleGeppo"] then
  pcall(function ()

    end)
  else
    pcall(function ()
    plr.GeppoCount.Combo.Enabled = SaveSettings["Extra"]["VisibleGeppo"]
    end)
  end
  wait()
  end
  end)




spawn(function ()
  while true do
  if SaveSettings["Main"]["Autofarm"] and (game.PlaceId == 6381829480 or game.PlaceId == 4520749081) then
  pcall(function()
    lvlx()
    if plr.PlayerGui.Quest.QuestBoard.Visible == false then
    spawn(function()
      Munrock()
      end)
    elseif plr.PlayerGui.Quest.QuestBoard.Visible == true then
    if game:GetService("ReplicatedStorage").MOB:FindFirstChild(quest[plr.CurrentQuest.Value].Mob) then
    plr.Character.HumanoidRootPart.CFrame = game:GetService("ReplicatedStorage").MOB:FindFirstChild(quest[plr.CurrentQuest.Value].Mob).HumanoidRootPart.CFrame * CFrame.new(0,20,0)
    else
      for i,v in pairs(game:GetService("Workspace").Monster[ReturnMonFolder()]:GetChildren()) do
    if v.Name == quest[plr.CurrentQuest.Value].Mob and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
    Mob = v
    repeat task.wait()
    spawn(function()
      if SaveSettings["Setting"]['Safe Farm'] then
      plr.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,SaveSettings["Setting"]['Distance'],Disc) * CFrame.Angles(math.rad(-90),0,0)
      else
        plr.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,0,SaveSettings["Setting"]['Distance'])
      end
      end)
    Click()
    game:GetService('VirtualUser'):CaptureController()
    game:GetService('VirtualUser'):Button1Down(Vector2.new(851, 158))
    if SaveSettings["Main2"]["WeaponSelect"] == "Melee" then
    EquipMelee()
    elseif SaveSettings["Main2"]["WeaponSelect"] == "Sword" then
    EquipSword()
    elseif SaveSettings["Main2"]["WeaponSelect"] == "Fruit" then
    EquipFruit()
    end
    spawn(function ()
      if SaveSettings["Main"]["SkillZ"] then
      skilluse("Z")
      end
      if SaveSettings["Main"]["SkillX"] then
      skilluse("X")
      end
      if SaveSettings["Main"]["SkillC"] then
      skilluse("C")
      end
      if SaveSettings["Main"]["SkillV"] then
      skilluse("V")
      end
      end)
    game:GetService('VirtualUser'):CaptureController()
    game:GetService('VirtualUser'):Button1Down(Vector2.new(851, 158))
    until v.Humanoid.Health <= 0 or SaveSettings["Main"]["Autofarm"] == false or plr.PlayerGui.Quest.QuestBoard.Visible == false
    return
    end
    end
    end
    end
    end)
  end
  wait()
  end
  end)
coroutine.wrap(function()
  game:getService("RunService"):UnbindFromRenderStep("noclOppl")
  game:getService("RunService"):BindToRenderStep("noclOppl",0,function()
    if SaveSettings["Main"]["Autofarm"] then
    pcall(function()
      for i2,v in pairs(plr.PlayerGui:GetChildren()) do
      if string.find(v.Name,"QuestLvl") or string.find(v.Name,"SwordShop") then
      v.Dialogue.Accept.Position = UDim2.new(0, -800 ,0, -700)
      v.Dialogue.Accept.Size = UDim2.new(5000, 5000, 5000, 5000)
      v.Dialogue.Accept.BackgroundTransparency = 1
      v.Dialogue.Accept.ImageTransparency = 1
      click()
      end
      end
      end)
    end

    end)
  end)()
spawn(function ()
  setfflag("HumanoidParallelRemoveNoPhysics", "False")
  setfflag("HumanoidParallelRemoveNoPhysicsNoSimulate2", "False")
  game:GetService("RunService").Stepped:Connect(function()
    pcall(function()
      if SaveSettings["Main"]["Autofarm"] or SaveSettings["Raid"]["Farm"] or SaveSettings["SeaMonster"]["Attack"] or SaveSettings["GhostShip"]["Attack"] then
      local char = plr.Character or plr.CharacterAdded:Wait()
      char.Humanoid:ChangeState(11)
      end
      end)
    end)
  end)
-- [Body Gyro]

task.spawn(function()
  game:GetService("RunService").Stepped:Connect(function()
    pcall(function()
--[World 1]
      if SaveSettings["Main"]["Autofarm"] or SaveSettings["Raid"]["Farm"] or SaveSettings["SeaMonster"]["Attack"] or SaveSettings["GhostShip"]["Attack"]
      then
      if syn then
      setfflag("HumanoidParallelRemoveNoPhysics", "False")
      setfflag("HumanoidParallelRemoveNoPhysicsNoSimulate2", "False")
      game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
      if game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Sit == true then
      game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Sit = false
      end
      else
        if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
      if not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity1") then
      if game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Sit == true then
      game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Sit = false
      end
      local BodyVelocity = Instance.new("BodyVelocity")
      BodyVelocity.Name = "BodyVelocity1"
      BodyVelocity.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
      BodyVelocity.MaxForce = Vector3.new(10000, 10000, 10000)
      BodyVelocity.Velocity = Vector3.new(0, 0, 0)
      end
      end
      for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
      if v:IsA("BasePart") then
      v.CanCollide = false
      end
      end
      end
      else
        if game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity1") then
      game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity1"):Destroy();
      end
      end
      end)
    end)
  end)

local metatable = getrawmetatable(game)
local namecall = metatable.__namecall
setreadonly(metatable, false)
metatable.__namecall = newcclosure(function(self, ...)
  local args = {
    ...
  }
  if SaveSettings["Main"]["Autofarm"] or SaveSettings["Raid"]["Farm"] then
  if self.Name == "Z" and Mob ~= nil then
  for i,v in pairs(args) do
  if typeof(v) == "CFrame" then
  args[i] = Mob.HumanoidRootPart.CFrame
  end
  end
  return namecall(self,unpack(args))
  end
  if self.Name == "X" and Mob ~= nil then
  for i,v in pairs(args) do
  if typeof(v) == "CFrame" then
  args[i] = Mob.HumanoidRootPart.CFrame
  end
  end
  return namecall(self,unpack(args))
  end
  if self.Name == "C" and Mob ~= nil then
  for i,v in pairs(args) do
  if typeof(v) == "CFrame" then
  args[i] = Mob.HumanoidRootPart.CFrame
  end
  end
  return namecall(self,unpack(args))
  end
  if self.Name == "V" and Mob ~= nil then
  for i ,v in pairs(args) do
  if typeof(v) == "CFrame" then
  args[i] = Mob.HumanoidRootPart.CFrame
  end
  end
  return namecall(self,unpack(args))
  end
  end

  return namecall(self, ...)
  end)
setreadonly(metatable, true)
spawn(function()
  while wait() do
  pcall(function()
    local VirtualUser = game:GetService("VirtualUser")
    VirtualUser:CaptureController()
    VirtualUser:SetKeyDown("w",key)
    wait()
    VirtualUser:CaptureController()
    VirtualUser:SetKeyUp("w",key)
    wait(1000)
    end)
  end
  end)
spawn(function()
  while wait() do
  pcall(function()
    for i,v in pairs(game.workspace:GetDescendants()) do
    if v:IsA("Seat") then
    v.Disabled = true
    end
    end
    end)
  wait(400)
  end
  end)
end
